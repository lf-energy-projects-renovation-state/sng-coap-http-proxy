# SPDX-FileCopyrightText: Contributors to the GXF project
#
# SPDX-License-Identifier: Apache-2.0
[versions]
avro = "1.12.0"
avro-plugin = "1.9.1"
californium = "3.8.0"
commonsCodec = "1.17.2"
dependency-management = "1.1.7"
gxf-utils = "2.1.2"
kotlin = "2.1.0"
kotlin-logging = "7.0.3"
mockk = "1.13.16"
springmockk = "4.0.2"
sonarqube = "6.0.1.5171"
spotless = "7.0.1"
spring-boot = "3.3.5"
wiremock = "3.6.0"

[libraries]
avro = { group = "org.apache.avro", name = "avro", version.ref = "avro" }
californiumCore = { group = "org.eclipse.californium", name = "californium-core", version.ref = "californium" }
californiumScandium = { group = "org.eclipse.californium", name = "scandium", version.ref = "californium" }
commonsCodec = { group = "commons-codec", name = "commons-codec", version.ref = "commonsCodec" }
flyway = { group = "org.flywaydb", name = "flyway-database-postgresql" }
h2 = { group = "com.h2database", name = "h2" }
jacksonDataformatCbor = { group = "com.fasterxml.jackson.dataformat", name = "jackson-dataformat-cbor" }
junitJupiterApi = { group = "org.junit.jupiter", name = "junit-jupiter-api" }
junitJupiterEngine = { group = "org.junit.jupiter", name = "junit-jupiter-engine" }
junitPlatformLauncher = { group = "org.junit.platform", name = "junit-platform-launcher" }
kafkaAvro = { group = "com.gxf.utilities", name = "kafka-avro", version.ref = "gxf-utils" }
kafkaAzureOAuth = { group = "com.gxf.utilities", name = "kafka-azure-oauth", version.ref = "gxf-utils" }
kafkaTestContainer = { group = "org.testcontainers", name = "kafka" }
kotlinReflect = { group = "org.jetbrains.kotlin", name = "kotlin-reflect", version.ref = "kotlin" }
kotlinLoggingJvm = { group = "io.github.oshai", name = "kotlin-logging-jvm", version.ref = "kotlin-logging" }
micrometerPrometheusModule = { group = "io.micrometer", name = "micrometer-registry-prometheus" }
mockk = { group = "io.mockk", name = "mockk", version.ref = "mockk" }
postgresql = { group = "org.postgresql", name = "postgresql" }
reflect = { group = "org.jetbrains.kotlin", name = "kotlin-reflect" }
springmockk = { group = "com.ninja-squad", name = "springmockk", version.ref = "springmockk" }
springBootStarterActuator = { group = "org.springframework.boot", name = "spring-boot-starter-actuator" }
springBootStarterTest = { group = "org.springframework.boot", name = "spring-boot-starter-test" }
springBootStarterThymeleaf = { group = "org.springframework.boot", name = "spring-boot-starter-thymeleaf" }
springBootStarterWeb = { group = "org.springframework.boot", name = "spring-boot-starter-web" }
springBootStarterWebflux = { group = "org.springframework.boot", name = "spring-boot-starter-webflux" }
springBootStarterDataJpa = { group = "org.springframework.boot", name = "spring-boot-starter-data-jpa" }
springSecurityCore = { group = "org.springframework.security", name = "spring-security-core" }
springKafka = { group = "org.springframework.kafka", name = "spring-kafka" }
springKafkaTest = { group = "org.springframework.kafka", name = "spring-kafka-test" }
springWsTest = { group = "org.springframework.ws", name = "spring-ws-test" }
wiremock = { group = "org.wiremock", name = "wiremock-standalone", version.ref = "wiremock" }

[bundles]
gxfUtils = ["kafkaAvro", "kafkaAzureOAuth"]

[plugins]
avro = { id = "com.github.davidmc24.gradle.plugin.avro", version.ref = "avro-plugin" }
dependencyManagement = { id = "io.spring.dependency-management", version.ref = "dependency-management" }
eclipse = { id = "eclipse" }
jacoco = { id = "jacoco" }
jacocoReportAggregation = { id = "jacoco-report-aggregation" }
jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
sonarqube = { id = "org.sonarqube", version.ref = "sonarqube" }
spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
springBoot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
